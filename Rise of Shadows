"use client";
import React from "react";

function MainComponent() {
  const [currentChapter, setCurrentChapter] = React.useState(0);
  const [playerHealth, setPlayerHealth] = React.useState(100);
  const [ammo, setAmmo] = React.useState(12);
  const [gameStarted, setGameStarted] = React.useState(false);
  const [showInventory, setShowInventory] = React.useState(false);

  const chapters = [
    {
      title: "Chapter 1 - Awakening",
      description: "Vinayak escapes the lab, learns basics, finds first weapon",
      background: "bg-gradient-to-b from-red-900 to-black",
      story:
        "You awaken in a sterile lab facility. The fluorescent lights flicker ominously above. Your head throbs as fragmented memories flash through your mind. A gun lies on the nearby table, and strange voices whisper in the darkness...",
      choices: [
        { text: "Pick up the weapon", action: () => setAmmo(24) },
        {
          text: "Search the room",
          action: () => setPlayerHealth(Math.min(100, playerHealth + 10)),
        },
        { text: "Listen to the voices", action: () => {} },
      ],
    },
    {
      title: "Chapter 2 - Signals in the Dark",
      description: "Fights through sewers, hears corrupted radio messages",
      background: "bg-gradient-to-b from-green-900 to-gray-900",
      story:
        "The sewers echo with inhuman screams. Your radio crackles with distorted voices - some human, some... not. The Wretched crawl along the walls above you, their claws scraping against concrete.",
      choices: [
        { text: "Follow the radio signal", action: () => {} },
        {
          text: "Stay silent and hide",
          action: () => setPlayerHealth(Math.max(70, playerHealth - 15)),
        },
        {
          text: "Fight the Wretched",
          action: () => setAmmo(Math.max(0, ammo - 6)),
        },
      ],
    },
    {
      title: "Chapter 3 - Face of Fear",
      description: "First encounter with a Spectral, meets survivor hologram",
      background: "bg-gradient-to-b from-purple-900 to-black",
      story:
        "The air shimmers as something invisible moves nearby. A familiar voice calls your name - but it's wrong, distorted. The Spectral reveals itself just as you spot a flickering hologram of another survivor...",
      choices: [
        {
          text: "Trust the hologram",
          action: () => setPlayerHealth(Math.min(100, playerHealth + 20)),
        },
        {
          text: "Attack the Spectral",
          action: () => setAmmo(Math.max(0, ammo - 8)),
        },
        { text: "Try to communicate", action: () => {} },
      ],
    },
    {
      title: "Chapter 4 - The Rise of the Hollow King",
      description: "Final boss showdown in corrupted lab core",
      background: "bg-gradient-to-b from-red-800 via-orange-900 to-black",
      story:
        "The lab core pulses with unnatural energy. Before you stands the Hollow King - once human, now a towering beast of flesh and metal. His voice booms in your mind: 'Join us, Vinayak. Remember who you really are...'",
      choices: [
        {
          text: "Fight the Hollow King",
          action: () => setAmmo(Math.max(0, ammo - 12)),
        },
        {
          text: "Resist his mental control",
          action: () => setPlayerHealth(Math.max(50, playerHealth - 25)),
        },
        { text: "Try to remember", action: () => {} },
      ],
    },
  ];

  const handleChoice = (choice) => {
    choice.action();
    if (currentChapter < chapters.length - 1) {
      setTimeout(() => setCurrentChapter(currentChapter + 1), 1500);
    }
  };

  const resetGame = () => {
    setCurrentChapter(0);
    setPlayerHealth(100);
    setAmmo(12);
    setGameStarted(false);
  };

  if (!gameStarted) {
    return (
      <div className="min-h-screen bg-gradient-to-b from-red-900 via-black to-gray-900 text-white relative overflow-hidden">
        <div className="absolute inset-0 bg-black opacity-70"></div>

        {/* Hero Image */}
        <div className="relative z-10 flex flex-col items-center justify-center min-h-screen px-4">
          <img
            src="https://ucarecdn.com/6696d101-133a-4404-a0f7-fc3fe3ba5ac5/-/format/auto/"
            alt="Nightfall Protocol: Rise of Shadows"
            className="max-w-4xl w-full h-auto mb-8 rounded-lg shadow-2xl"
          />

          <div className="text-center max-w-4xl">
            <h1 className="text-6xl md:text-8xl font-bold mb-4 text-red-400 font-serif tracking-wider">
              NIGHTFALL PROTOCOL
            </h1>
            <h2 className="text-3xl md:text-4xl font-bold mb-8 text-orange-300">
              RISE OF SHADOWS
            </h2>

            <div className="bg-black bg-opacity-80 p-8 rounded-lg mb-8 max-w-3xl mx-auto">
              <p className="text-lg md:text-xl mb-6 leading-relaxed">
                In the year 2049, a rogue biotech corporation named "KORVEX"
                unleashes a mind-altering virus known as "Oblivion Strain" on a
                quarantined district. The virus doesn't just reanimate the dead
                — it mutates the minds of the living, twisting them into
                creatures of their worst fears.
              </p>
              <p className="text-lg md:text-xl leading-relaxed text-red-300">
                You play as Vinayak, a former special operative, who awakens in
                an abandoned lab facility with no memory… only a gun, a scar,
                and voices that aren't his own.
              </p>
            </div>

            <button
              onClick={() => setGameStarted(true)}
              className="bg-red-600 hover:bg-red-700 text-white text-2xl font-bold py-4 px-12 rounded-lg transform hover:scale-105 transition-all duration-300 shadow-2xl border-2 border-red-400"
            >
              <i className="fas fa-play mr-3"></i>
              BEGIN PROTOCOL
            </button>
          </div>
        </div>
      </div>
    );
  }

  const chapter = chapters[currentChapter];

  return (
    <div className={`min-h-screen ${chapter.background} text-white relative`}>
      {/* HUD */}
      <div className="fixed top-0 left-0 right-0 z-50 bg-black bg-opacity-80 p-4">
        <div className="flex justify-between items-center max-w-6xl mx-auto">
          <div className="flex items-center space-x-6">
            <div className="flex items-center">
              <i className="fas fa-heart text-red-500 mr-2"></i>
              <div className="w-32 bg-gray-700 rounded-full h-4">
                <div
                  className="bg-red-500 h-4 rounded-full transition-all duration-500"
                  style={{ width: `${playerHealth}%` }}
                ></div>
              </div>
              <span className="ml-2 text-sm">{playerHealth}/100</span>
            </div>

            <div className="flex items-center">
              <i className="fas fa-crosshairs text-yellow-500 mr-2"></i>
              <span className="text-lg font-bold">{ammo}</span>
            </div>
          </div>

          <div className="flex items-center space-x-4">
            <button
              onClick={() => setShowInventory(!showInventory)}
              className="bg-gray-700 hover:bg-gray-600 px-4 py-2 rounded-lg"
            >
              <i className="fas fa-backpack mr-2"></i>
              Inventory
            </button>
            <button
              onClick={resetGame}
              className="bg-red-600 hover:bg-red-700 px-4 py-2 rounded-lg"
            >
              <i className="fas fa-redo mr-2"></i>
              Reset
            </button>
          </div>
        </div>
      </div>

      {/* Main Game Content */}
      <div className="pt-24 px-4 pb-8">
        <div className="max-w-4xl mx-auto">
          {/* Chapter Title */}
          <div className="text-center mb-8">
            <h2 className="text-4xl md:text-5xl font-bold mb-2 text-red-400">
              {chapter.title}
            </h2>
            <p className="text-xl text-gray-300 italic">
              {chapter.description}
            </p>
          </div>

          {/* Story Content */}
          <div className="bg-black bg-opacity-70 p-8 rounded-lg mb-8 border border-red-900">
            <p className="text-lg md:text-xl leading-relaxed mb-6">
              {chapter.story}
            </p>

            {/* Choices */}
            <div className="space-y-4">
              <h3 className="text-2xl font-bold text-orange-400 mb-4">
                <i className="fas fa-crossroads mr-2"></i>
                Choose Your Action:
              </h3>
              {chapter.choices.map((choice, index) => (
                <button
                  key={index}
                  onClick={() => handleChoice(choice)}
                  className="w-full text-left bg-gray-800 hover:bg-gray-700 p-4 rounded-lg border border-gray-600 hover:border-red-500 transition-all duration-300 transform hover:scale-105"
                >
                  <i className="fas fa-arrow-right text-red-400 mr-3"></i>
                  {choice.text}
                </button>
              ))}
            </div>
          </div>

          {/* Chapter Progress */}
          <div className="text-center">
            <div className="flex justify-center space-x-2 mb-4">
              {chapters.map((_, index) => (
                <div
                  key={index}
                  className={`w-4 h-4 rounded-full ${
                    index <= currentChapter ? "bg-red-500" : "bg-gray-600"
                  }`}
                ></div>
              ))}
            </div>
            <p className="text-gray-400">
              Chapter {currentChapter + 1} of {chapters.length}
            </p>
          </div>
        </div>
      </div>

      {/* Inventory Overlay */}
      {showInventory && (
        <div className="fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center">
          <div className="bg-gray-900 p-8 rounded-lg border border-red-900 max-w-md w-full mx-4">
            <h3 className="text-2xl font-bold mb-4 text-red-400">
              <i className="fas fa-backpack mr-2"></i>
              Inventory
            </h3>
            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <span>Combat Pistol</span>
                <span className="text-yellow-400">1</span>
              </div>
              <div className="flex items-center justify-between">
                <span>Ammunition</span>
                <span className="text-yellow-400">{ammo}</span>
              </div>
              <div className="flex items-center justify-between">
                <span>Medical Kit</span>
                <span className="text-yellow-400">2</span>
              </div>
            </div>
            <button
              onClick={() => setShowInventory(false)}
              className="mt-6 w-full bg-red-600 hover:bg-red-700 py-2 rounded-lg"
            >
              Close
            </button>
          </div>
        </div>
      )}

      {/* Atmospheric Effects */}
      <div className="fixed inset-0 pointer-events-none">
        <div className="absolute top-0 left-0 w-full h-full opacity-20">
          {[...Array(50)].map((_, i) => (
            <div
              key={i}
              className="absolute w-1 h-1 bg-red-500 rounded-full animate-pulse"
              style={{
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
                animationDelay: `${Math.random() * 3}s`,
              }}
            ></div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default MainComponent;
